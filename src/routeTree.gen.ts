/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as AboutImport } from './pages/about'
import { Route as IndexImport } from './pages/index'

// Create Virtual Routes

const SignatureLazyImport = createFileRoute('/signature')()
const JsonToTsLazyImport = createFileRoute('/jsonToTs')()
const CoordinateLazyImport = createFileRoute('/coordinate')()
const CalculateDistanceLazyImport = createFileRoute('/calculateDistance')()

// Create/Update Routes

const SignatureLazyRoute = SignatureLazyImport.update({
  id: '/signature',
  path: '/signature',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./pages/signature.lazy').then((d) => d.Route))

const JsonToTsLazyRoute = JsonToTsLazyImport.update({
  id: '/jsonToTs',
  path: '/jsonToTs',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./pages/jsonToTs.lazy').then((d) => d.Route))

const CoordinateLazyRoute = CoordinateLazyImport.update({
  id: '/coordinate',
  path: '/coordinate',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./pages/coordinate.lazy').then((d) => d.Route))

const CalculateDistanceLazyRoute = CalculateDistanceLazyImport.update({
  id: '/calculateDistance',
  path: '/calculateDistance',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./pages/calculateDistance.lazy').then((d) => d.Route),
)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/calculateDistance': {
      id: '/calculateDistance'
      path: '/calculateDistance'
      fullPath: '/calculateDistance'
      preLoaderRoute: typeof CalculateDistanceLazyImport
      parentRoute: typeof rootRoute
    }
    '/coordinate': {
      id: '/coordinate'
      path: '/coordinate'
      fullPath: '/coordinate'
      preLoaderRoute: typeof CoordinateLazyImport
      parentRoute: typeof rootRoute
    }
    '/jsonToTs': {
      id: '/jsonToTs'
      path: '/jsonToTs'
      fullPath: '/jsonToTs'
      preLoaderRoute: typeof JsonToTsLazyImport
      parentRoute: typeof rootRoute
    }
    '/signature': {
      id: '/signature'
      path: '/signature'
      fullPath: '/signature'
      preLoaderRoute: typeof SignatureLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/calculateDistance': typeof CalculateDistanceLazyRoute
  '/coordinate': typeof CoordinateLazyRoute
  '/jsonToTs': typeof JsonToTsLazyRoute
  '/signature': typeof SignatureLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/calculateDistance': typeof CalculateDistanceLazyRoute
  '/coordinate': typeof CoordinateLazyRoute
  '/jsonToTs': typeof JsonToTsLazyRoute
  '/signature': typeof SignatureLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/calculateDistance': typeof CalculateDistanceLazyRoute
  '/coordinate': typeof CoordinateLazyRoute
  '/jsonToTs': typeof JsonToTsLazyRoute
  '/signature': typeof SignatureLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/calculateDistance'
    | '/coordinate'
    | '/jsonToTs'
    | '/signature'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/calculateDistance'
    | '/coordinate'
    | '/jsonToTs'
    | '/signature'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/calculateDistance'
    | '/coordinate'
    | '/jsonToTs'
    | '/signature'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  CalculateDistanceLazyRoute: typeof CalculateDistanceLazyRoute
  CoordinateLazyRoute: typeof CoordinateLazyRoute
  JsonToTsLazyRoute: typeof JsonToTsLazyRoute
  SignatureLazyRoute: typeof SignatureLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  CalculateDistanceLazyRoute: CalculateDistanceLazyRoute,
  CoordinateLazyRoute: CoordinateLazyRoute,
  JsonToTsLazyRoute: JsonToTsLazyRoute,
  SignatureLazyRoute: SignatureLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/calculateDistance",
        "/coordinate",
        "/jsonToTs",
        "/signature"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/calculateDistance": {
      "filePath": "calculateDistance.lazy.tsx"
    },
    "/coordinate": {
      "filePath": "coordinate.lazy.tsx"
    },
    "/jsonToTs": {
      "filePath": "jsonToTs.lazy.tsx"
    },
    "/signature": {
      "filePath": "signature.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
